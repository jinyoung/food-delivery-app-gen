Please implement for this Event Storming Model:

{"_type":"BoundedContext","aggregates":[{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"String","name":"paymentId","displayName":"결제 ID","_type":"FieldDescriptor"},{"className":"String","name":"method","displayName":"결제 방법","_type":"FieldDescriptor"},{"className":"Money","name":"amount","displayName":"금액","_type":"FieldDescriptor"}]},"commands":[{"_type":"Command","fieldDescriptors":[{"className":"String","name":"method","_type":"FieldDescriptor"},{"className":"Money","name":"amount","_type":"FieldDescriptor"}],"name":"CreatePayment","displayName":"결제 생성"}],"events":[{"fieldDescriptors":[{"className":"String","name":"paymentId","_type":"FieldDescriptor"},{"className":"String","name":"method","_type":"FieldDescriptor"},{"className":"Money","name":"amount","_type":"FieldDescriptor"}],"name":"PaymentCompleted","displayName":"결제 완료됨","_type":"Event"}],"name":"Payment","displayName":"결제","_type":"Aggregate"}],"name":"payment-management","displayName":"결제 관리","policies":[]}


I want to utilize following techniques:

- JSP and JDBC Prepared Statement only.
- H2 DB
- DO NOT create any Java classes like DTO or Services. Put the all the logics into JSP pages. 


SELF-CRITICISM: 
 - when you create pom.xml, USE correct parent project to spring boot 3
 - when you create pom.xml, you MUST specify the version: 3.1.3 ONLY for the spring-cloud-streams
 - Please generate start from pom.xml


when you create execution shell (run.sh), please add '--no-transfer-progress' option not to output transfer progress if there's mvn command:

```
mvn [command] --no-transfer-progress
```

